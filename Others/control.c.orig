#include "control.h"

u8 ledStat[5], fullOnLedNum, halfOnLed, expLed;//LED模式（0关、1半开、2全开）；全亮的LED数量；点亮一半的LED；期望LED（传感器交互）
//以下为能量机关各边灯数量，从底部右侧顺时针方向绕一周后从底部向上写T字
u8 led1Para[10]={9,9,16,8,13,8,16,9,27,14};
u8 led2Para[10]={9,9,16,8,13,8,16,9,27,14};
u8 led3Para[10]={9,9,16,8,13,8,16,9,27,14};
u8 led4Para[10]={9,9,16,8,13,8,16,9,27,14};
u8 led5Para[10]={9,9,16,8,13,8,16,9,27,14};
extern u8 ctrlMode;
extern u32 onPowerTime;

u8 getRand(u8 low, u8 high) {//获取随机数
    u8 random;
    srand(onPowerTime);
    do random = rand() % 10;
    while (random < low || random > high);
    delay_ms(2);
    return random;
}

void ledCtrl(u8 ledID, u8 ledMode) {
    ledStat[ledID] = ledMode;
}

void ledOFF() {
    for(u8 i = 0; i < 5; i++) ledCtrl(i, 0);
}

void ledAdd() {
    u8 randomLedNum;
    ledCtrl(halfOnLed, 2);//全开上一个半开LED
    fullOnLedNum++;
    if(fullOnLedNum == 5) {//若LED已经全开
        ctrlMode = 4;
        return;
    }
    do randomLedNum = getRand(0, 4);//随机找没开的LED
    while (ledStat[randomLedNum] == 2);
    halfOnLed = randomLedNum;
    ledCtrl(randomLedNum, 1);
}

void ledReborn() {
    u8 randomLedNum;
    ledOFF();
    do randomLedNum = getRand(0, 4);//随机找没开的LED
    while (ledStat[randomLedNum] == 2);
    halfOnLed = randomLedNum;
    ledCtrl(0, randomLedNum);
}

void ledFlash() {//LED控制
		for(u8 i = 0;i < 5;i++){
				for(u8 j = 0;j < 10;j++){
							if(ledStat[i] == 0){
					
						}
						else if(ledStat[i] == 1){
							
						}
						else if(ledStat[i] == 2){
							
						}
				}
		}
}
